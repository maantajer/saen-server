require('dotenv').config(); // ุชุญููู ุงููุชุบูุฑุงุช ูู .env
const path = require('path');
const express = require('express');
const cors = require('cors');
const { createClient } = require('@supabase/supabase-js');

const app = express();
const port = process.env.PORT || 4000;

// ุฅุนุฏุงุฏ Supabase ูู ููู env
const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

// ุฅุนุฏุงุฏุงุช Express
app.use(cors());
app.use(express.json());
app.use(express.static(path.join(__dirname, 'public')));

// โ ุชุณุฌูู ุงูุฏุฎูู
app.post('/api/login', async (req, res) => {
  const { username, password } = req.body;

  try {
    if (username === 'maan' && password === '1234') {
      return res.json({ success: true, message: 'ุชุณุฌูู ุฏุฎูู ุงููุดุฑู ูุงุฌุญ', isAdmin: true });
    }

    const { data, error } = await supabase
      .from('clients')
      .select('*')
      .eq('username', username)
      .eq('password', password)
      .single();

    if (error || !data) {
      return res.status(401).json({ success: false, message: 'ุงุณู ุงููุณุชุฎุฏู ุฃู ูููุฉ ุงููุฑูุฑ ุบูุฑ ุตุญูุญุฉ' });
    }

    res.json({ success: true, message: 'ุชุณุฌูู ุฏุฎูู ูุงุฌุญ', client: data });
  } catch (err) {
    console.error('โ ุฎุทุฃ ุชุณุฌูู ุงูุฏุฎูู:', err);
    res.status(500).json({ success: false, message: 'ุญุฏุซ ุฎุทุฃ ุจุงูุณูุฑูุฑ', error: err });
  }
});

// โ ุฅุถุงูุฉ ุนููู
app.post('/api/add-client', async (req, res) => {
  const { name, username, password, phone, car_type = '', plate_number = '' } = req.body;

  if (!username || !password || !name) {
    return res.status(400).json({ success: false, message: 'ูุฌุจ ุชุนุจุฆุฉ ูู ุงูุญููู ุงููุทููุจุฉ' });
  }

  try {
    const { data, error } = await supabase
      .from('clients')
      .insert([{
        name,
        username,
        password,
        phone,
        car_type,
        plate_number,
        created_at: new Date().toISOString(), // ๐ข ุถุฑูุฑู ุจุณุจุจ not null
      }]);

    if (error) {
      console.error('โ ูุดู ูู ุงูุฅุถุงูุฉ:', error);
      return res.status(500).json({ success: false, message: 'ูุดู ูู ุฅุถุงูุฉ ุงูุนููู', error });
    }

    res.json({ success: true, message: 'ุชู ุฅุถุงูุฉ ุงูุนููู ุจูุฌุงุญ', clientId: data[0].id });
  } catch (err) {
    console.error('โ ุฎุทุฃ ุจุงูุณูุฑูุฑ:', err);
    res.status(500).json({ success: false, message: 'ุฎุทุฃ ุจุงูุณูุฑูุฑ', error: err });
  }
});

// โ ุนุฑุถ ูู ุงูุฒุจุงุฆู
app.get('/api/clients', async (req, res) => {
  try {
    const { data, error } = await supabase.from('clients').select('*');

    if (error) {
      console.error('โ ูุดู ูู ุฌูุจ ุงูุฒุจุงุฆู:', error);
      return res.status(500).json({ success: false, message: 'ูุดู ูู ุฌูุจ ุงูุฒุจุงุฆู', error });
    }

    res.json({ success: true, clients: data });
  } catch (err) {
    console.error('โ ุฎุทุฃ:', err);
    res.status(500).json({ success: false, message: 'ุฎุทุฃ ุจุงูุณูุฑูุฑ', error: err });
  }
});

// โ ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉ
app.get('/', (req, res) => {
  res.send('๐ ุงูุณูุฑูุฑ ุดุบุงู ุจูุฌุงุญุ ูุง ููุฌุฏ index.html ุญุงููุงู');
});

app.listen(port, () => {
  console.log(`๐ ุงูุณูุฑูุฑ ุดุบุงู ุนูู http://localhost:${port}`);
});
